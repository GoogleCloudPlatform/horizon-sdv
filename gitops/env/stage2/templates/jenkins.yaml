# Copyright (c) 2024-2025 Accenture, All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "6"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: horizon-sdv
  source:
    chart: jenkins
    repoURL: https://charts.jenkins.io
    targetRevision: 5.8.31
    helm:
      values: |
        persistence:
          accessMode: "ReadWriteOnce"
          enabled: true
          existingClaim: "jenkins-home-volume"
        rbac:
          readSecrets: true
        agent:
          containerCap: 20
        controller:
          sidecars:
            configAutoReload:
              enabled: false
          jenkinsUriPrefix: /jenkins
          numExecutors: 1
          executorMode: "EXCLUSIVE"
          customJenkinsLabels: [ "seed-node" ]
          admin:
            createSecret: true
            existingSecret: jenkins-initial-creds
            userkey: jenkins-admin-user
            passwordkey: jenkins-admin-password
          jenkinsUrl: https://{{ .Values.config.domain }}/jenkins
          installPlugins:
            - antisamy-markup-formatter:173.v680e3a_b_69ff3
            - apache-httpcomponents-client-4-api:4.5.14-269.vfa_2321039a_83
            - asm-api:9.8-163.vb_2a_96d3f9c3c
            - authentication-tokens:1.144.v5ff4a_5ec5c33
            - bootstrap5-api:5.3.3-2
            - bouncycastle-api:2.30.1.81-264.v95c79c0e772c
            - branch-api:2.1229.ve86b_d02b_5e56
            - caffeine-api:3.2.2-178.v353b_8428ed56
            - checks-api:373.vfe7645102093
            - cloudbees-folder:6.1026.ve06dfa_cf31c3
            - commons-lang3-api:3.18.0-98.v3a_674c06072d
            - commons-text-api:1.14.0-194.v804a_dc3a_1b_d8
            - command-launcher:123.v37cfdc92ef67
            - configuration-as-code:1963.v24e046127a_3f
            - credentials-binding:702.vfe613e537e88
            - credentials:1419.v2337d1ceceef
            - display-url-api:2.217.va_6b_de84cc74b_
            - durable-task:595.ve87b_f1318d67
            - echarts-api:6.0.0-1
            - eddsa-api:0.3.0.1-19.vc432d923e5ee
            - font-awesome-api:7.0.0-840.vd6c7a_a_a_a_88e1
            - git-client:6.2.0
            - git:5.7.0
            - github-api:1.321-488.v9b_c0da_9533f8
            - github:1.43.0
            - google-oauth-plugin:1.335.ve6de40e2db_18
            - gson-api:2.13.1-153.vb_3d0c48a_a_b_4a_
            - instance-identity:203.v15e81a_1b_7a_38
            - ionicons-api:88.va_4187cb_eddf1
            - jackson2-api:2.19.2-408.v18248a_324cfe
            - jakarta-activation-api:2.1.3-2
            - jakarta-mail-api:2.1.3-3
            - javax-activation-api:1.2.0-8
            - javax-mail-api:1.6.2-11
            - jaxb:2.3.9-133.vb_ec76a_73f706
            - jdk-tool:83.v417146707a_3d
            - jjwt-api:0.11.5-120.v0268cf544b_89
            - joda-time-api:2.14.0-149.v1c3ce991d1b_9
            - jquery3-api:3.7.1-594.vb_3864f326cf0
            - jsch:0.2.16-95.v3eecb_55fa_b_78
            - json-api:20250517-163.v1c5da_e99c775
            - json-path-api:2.9.0-178.vca_b_c71881321
            - junit:1335.v6b_a_a_e18534e1
            - kubernetes-client-api:7.3.1-256.v788a_0b_787114
            - kubernetes-credentials:203.v85b_9836a_f44b_
            - mailer:489.vd4b_25144138f
            - matrix-project:856.v4c352b_3a_b_23e
            - metrics:4.2.32-476.v5042e1c1edd7
            - mina-sshd-api-common:2.15.0-161.vb_200831a_c15b_
            - mina-sshd-api-core:2.15.0-161.vb_200831a_c15b_
            - oauth-credentials:0.657.v7d8dd90b_0382
            - okhttp-api:4.11.0-189.v976fa_d3379d6
            - pipeline-build-step:571.v08a_fffd4b_0ce
            - pipeline-graph-analysis:241.vc3d48fb_b_2582
            - pipeline-groovy-lib:752.vdddedf804e72
            - pipeline-input-step:534.v352f0a_e98918
            - pipeline-milestone-step:138.v78ca_76831a_43
            - pipeline-model-api:2.2265.v140e610fe9d5
            - pipeline-model-definition:2.2265.v140e610fe9d5
            - pipeline-model-extensions:2.2265.v140e610fe9d5
            - pipeline-rest-api:2.38
            - pipeline-stage-step:322.vecffa_99f371c
            - pipeline-stage-tags-metadata:2.2265.v140e610fe9d5
            - plain-credentials:199.v9f8e1f741799
            - plugin-util-api:6.1157.vc75ef7129d86
            - prism-api:1.30.0-600.v0b_eeeb_e43a_f9
            - scm-api:707.v749f968369d4
            - script-security:1378.vf25626395f49
            - snakeyaml-api:2.3-125.v4d77857a_b_402
            - ssh-credentials:361.vb_f6760818e8c
            - sshd:3.374.v19b_d59ce6610
            - structs:353.v261ea_40a_80fb_
            - token-macro:477.vd4f0dc3cb_cf1
            - trilead-api:2.209.v0e69b_c43c245
            - variant:70.va_d9f17f859e0
            - workflow-aggregator:608.v67378e9d3db_1
            - workflow-api:1373.v7b_813f10efa_b_
            - workflow-basic-steps:1079.vce64b_a_929c5a_
            - workflow-cps:4183.v94b_6fd39da_c1
            - workflow-durable-task-step:1452.v0ee719c104a_7
            - workflow-job:1540.v295eccc9778f
            - workflow-multibranch:811.vcd33d074c2a_0
            - workflow-scm-step:437.v05a_f66b_e5ef8
            - workflow-step-api:706.v518c5dcb_24c0
            - workflow-support:976.vb_d9493c2eb_09
          additionalPlugins:
            - authorize-project:2.0.0
            - build-blocker-plugin:166.vc82fc20b_a_ed6
            - build-user-vars-plugin:195.v8c35f9d5c3dc
            - configuration-as-code-groovy:1.1
            - envinject:2.926.v69c9b_3896a_96
            - envinject-api:1.235.va_14c74f8f487
            - gerrit-code-review:0.5.0
            - gerrit-trigger:2.42.0
            - github-branch-source:1824.v046257273408
            - google-compute-engine:4.683.v0ce26579a_ee7
            - google-kubernetes-engine:0.443.vcf71f5903ef3
            - htmlpublisher:427
            - job-dsl:1.93
            - keycloak:2.3.2
            - kubernetes:4358.vcfd9c5a_0a_f51
            - kubernetes-credentials-provider:1.276.v99a_de03cb_076
            - parameter-separator:296.v9b_a_90c81160d
            - pipeline-stage-view:2.38
            - role-strategy:799.v5b_e7b_ecc231e
            - ssh-slaves:3.1071.v0d059c7b_c555
            - startup-trigger-plugin:2.9.4
            - timestamper:1.30
          additionalExistingSecrets:
            - name: jenkins-keycloak
              keyName: keycloakJson
            - name: jenkins-gerrit-ssh-private-key
              keyName: privateKey
            - name: jenkins-gce-creds
              keyName: gce-creds-json
            - name: jenkins-gerrit-http-password
              keyName: password
          javaOpts: "-Dcom.cloudbees.workflow.rest.external.JobExt.maxRunsPerJob=50"
          enableRawHtmlMarkupFormatter: true
          markupFormatter: rawHtml
          JCasC:
            enabled: true
            security:
              queueItemAuthenticator:
                authenticators:
                - project:
                    disabledStrategies:
                    - "org.jenkinsci.plugins.authorizeproject.strategy.SystemAuthorizationStrategy"
                    - "org.jenkinsci.plugins.authorizeproject.strategy.SpecificUsersAuthorizationStrategy"
                    - "org.jenkinsci.plugins.authorizeproject.strategy.AnonymousAuthorizationStrategy"
                    enabledStrategies:
                    - "org.jenkinsci.plugins.authorizeproject.strategy.TriggeringUsersAuthorizationStrategy"
            securityRealm: |-
              keycloak:
                keycloakJson: ${jenkins-keycloak-keycloakJson}
                keycloakRespectAccessTokenTimeout: false
                keycloakValidate: false
            defaultConfig: true
            configScripts:
              welcome-message: |
                credentials:
                  system:
                    domainCredentials:
                      - credentials:
                        - googleRobotPrivateKey:
                            description: "GCE Creds"
                            id: "gce-creds"
                            scope: GLOBAL
                            projectId: {{ .Values.config.projectID }}
                            serviceAccountConfig:
                              json:
                                filename: {{ .Values.config.projectID }}.json"
                                secretJsonKey: ${base64:${jenkins-gce-creds-gce-creds-json}}
                jenkins:
                  systemMessage: Welcome to Horizon SDV server.
                  authorizationStrategy:
                    roleBased:
                      permissionTemplates:
                        - name: "horizon-jenkins-workload-developers"
                          permissions:
                            - "Job/Read"
                            - "Job/Discover"
                            - "Job/Build"
                            - "View/Read"
                            - "Job/Configure"
                            - "Job/Delete"
                            - "Job/Create"
                            - "Job/Move"
                            - "Job/Workspace"
                            - "Job/Cancel"
                        - name: "horizon-jenkins-workload-users"
                          permissions:
                            - "Job/Read"
                            - "Job/Discover"
                            - "Job/Build"
                            - "View/Read"
                            - "Job/Cancel"
                      roles:
                        global:
                          - name: "horizon-jenkins-administrators"
                            description: "Jenkins administration role for unrestricted access."
                            permissions:
                              - "Overall/Administer"
                            entries:
                              - group: "horizon-jenkins-administrators"
                              # Example user
                              # - user: "john.example.doe@accenture.com"
                          - name: "horizon-jenkins-workloads-developers"
                            description: "Jenkins workloads developers role for workload usage and configuration."
                            permissions:
                              - "Overall/Read"
                              - "Agent/Build"
                              - "Job/Create"
                            entries:
                              - group: "horizon-jenkins-workloads-developers"
                              # Example user
                              # - user: "jane.example.doe@accenture.com"
                          - name: "horizon-jenkins-workloads-users"
                            description: "Jenkins workloads users role with restricted access to workloads."
                            permissions:
                              - "Overall/Read"
                            entries:
                              - group: "horizon-jenkins-workloads-users"
                              # Example user
                              # - user: "john.example.doe@accenture.com"
                        items:
                          - name: "workloads-developers" 
                            description: "Workloads developers item role with unrestricted access." 
                            pattern: ".*"
                            templateName: "horizon-jenkins-workload-developers"
                            entries:
                              - group: "horizon-jenkins-workloads-developers"
                              # Example user
                              # - user: "jane.example.doe@accenture.com"
                          - name: "workloads-users" 
                            description: "Workloads user item role with restricted access." 
                            pattern: ".*"
                            templateName: "horizon-jenkins-workload-users"
                            entries:
                              - group: "horizon-jenkins-workloads-users"
                              # Example user
                              # - user: "john.example.doe@accenture.com"
                  clouds:
                    - computeEngine:
                        cloudName: cuttlefish-vm-main
                        configurations:
                          - bootDiskAutoDelete: true
                            bootDiskSizeGb: 10
                            bootDiskSizeGbStr: "10"
                            bootDiskType: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}/diskTypes/hyperdisk-balanced"
                            description: "cuttlefish-vm-main"
                            javaExecPath: "/usr/bin/java"
                            labelSet:
                              - name: "cuttlefish-vm-main"
                            labelString: "cuttlefish-vm-main"
                            labels: "cuttlefish-vm-main"
                            launchTimeoutSeconds: 300
                            launchTimeoutSecondsStr: "300"
                            mode: NORMAL
                            namePrefix: "cuttlefish-vm-main"
                            numExecutors: 1
                            numExecutorsStr: "1"
                            oneShot: true
                            region: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/regions/{{ .Values.config.region }}"
                            remoteFs: "/home/jenkins"
                            retentionTimeMinutes: 6
                            retentionTimeMinutesStr: "6"
                            runAsUser: "jenkins"
                            sshConfiguration:
                              customPrivateKeyCredentialsId: "jenkins-cuttlefish-vm-ssh-private-key"
                            template: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/global/instanceTemplates/instance-template-cuttlefish-vm-main"
                            useInternalAddress: true
                            zone: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}"
                        credentialsId: "gce-creds"
                        instanceCapStr: "20"
                        noDelayProvisioning: false
                        projectId: {{ .Values.config.projectID }}
                    - computeEngine:
                        cloudName: "cuttlefish-vm-v1180"
                        configurations:
                        - bootDiskAutoDelete: true
                          bootDiskSizeGb: 10
                          bootDiskSizeGbStr: "10"
                          bootDiskType: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}/diskTypes/hyperdisk-balanced"
                          description: "cuttlefish-vm-v1180"
                          javaExecPath: "/usr/bin/java"
                          labelSet:
                          - name: "cuttlefish-vm-v1180"
                          labelString: "cuttlefish-vm-v1180"
                          labels: "cuttlefish-vm-v1180"
                          launchTimeoutSeconds: 300
                          launchTimeoutSecondsStr: "300"
                          mode: NORMAL
                          namePrefix: "cuttlefish-vm-v1180"
                          numExecutors: 1
                          numExecutorsStr: "1"
                          oneShot: true
                          region: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/regions/{{ .Values.config.region }}"
                          remoteFs: "/home/jenkins"
                          retentionTimeMinutes: 6
                          retentionTimeMinutesStr: "6"
                          runAsUser: "jenkins"
                          sshConfiguration:
                            customPrivateKeyCredentialsId: "jenkins-cuttlefish-vm-ssh-private-key"
                          template: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/global/instanceTemplates/instance-template-cuttlefish-vm-v1180"
                          useInternalAddress: true
                          zone: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}"
                        credentialsId: "gce-creds"
                        instanceCapStr: "20"
                        noDelayProvisioning: false
                        projectId: {{ .Values.config.projectID }}
                  globalNodeProperties:
                    - envVars:
                        env:
                        - key: "ANDROID_BUILD_BUCKET_ROOT_NAME"
                          value: {{ .Values.config.projectID }}-aaos
                        - key: "ANDROID_BUILD_DOCKER_ARTIFACT_PATH_NAME"
                          value: "horizon-sdv/aaos-builder"
                        - key: "CLOUD_REGION"
                          value: {{ .Values.config.region }}
                        - key: "CLOUD_ZONE"
                          value: {{ .Values.config.zone }}
                        - key: "CLOUD_PROJECT"
                          value: {{ .Values.config.projectID }}
                        - key: "CLOUD_BACKEND_BUCKET"
                          value: {{ .Values.config.backendBucket }}
                        - key: "GERRIT_CREDENTIALS_ID"
                          value: "jenkins-gerrit-http-password"
                        - key: "HORIZON_DOMAIN"
                          value: {{ .Values.config.domain }}
                        - key: "HORIZON_GITHUB_URL"
                          value: {{ .Values.config.workloads.android.url }}
                        - key: "HORIZON_GITHUB_BRANCH"
                          value: {{ .Values.config.workloads.android.branch }}
                        - key: "JENKINS_SERVICE_ACCOUNT"
                          value: "jenkins-sa"
                        - key: "JENKINS_AAOS_BUILD_CACHE_STORAGE_PREFIX"
                          value: "reclaimable-storage-class"
                        - key: "OPENBSW_BUILD_BUCKET_ROOT_NAME"
                          value: {{ .Values.config.projectID }}-openbsw
                        - key: "OPENBSW_BUILD_DOCKER_ARTIFACT_PATH_NAME"
                          value: "horizon-sdv/openbsw-builder"
                        - key: "INFRA_DOCKER_ARTIFACT_PATH_NAME"
                          value: "horizon-sdv/abfs-infra"
                        - key: "ABFS_BUILD_DOCKER_ARTIFACT_PATH_NAME"
                          value: "horizon-sdv/aaos-abfs-builder"

                        - key: "CLOUD_WS_WORKLOADS_ENV_IMAGE_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.workloadEnv.image }}
                        - key: "CLOUD_WS_CLUSTER_PRESET_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.clusterPresets.name }}
                        - key: "CLOUD_WS_CLUSTER_PRESET_NETWORK_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.clusterPresets.network }}
                        - key: "CLOUD_WS_CLUSTER_PRESET_SUBNETWORK_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.clusterPresets.subnetwork }}
                        - key: "CLOUD_WS_CLUSTER_PRESET_PRIVATE_CLUSTER"
                          value: {{ .Values.config.workloads.cloudWorkstations.clusterPresets.privateCluster }}
                        - key: "CLOUD_WS_HORIZON_CODE_OSS_IMAGE_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.workstationPresets.wsImages.horizonCodeOSS.image }}
                        - key: "CLOUD_WS_HORIZON_ASFP_IMAGE_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.workstationPresets.wsImages.horizonASFP.image }}
                        - key: "CLOUD_WS_HORIZON_ANDROID_STUDIO_IMAGE_NAME"
                          value: {{ .Values.config.workloads.cloudWorkstations.workstationPresets.wsImages.horizonAndroidStudio.image }}

                groovy:
                  - script: >
                      println("This is groovy !");
                jobs:
                  - script: >
                      pipelineJob('Seed Workloads') {
                        description('''<br/><h3 style="margin-bottom: 10px;">Seed Workloads Job</h3>
                          <p>This seed job is used to to create and update the workload pipeline folders and jobs in Jenkins.</p>
                          <h4 style="margin-bottom: 10px;">Mandatory Parameters</h4>
                          <ul><li><code>SEED_WORKLOAD</code>: The name of the workload to populate.</li></ul>
                          <p>Refer to the README.md in the repository for further information.</p>
                        ''')

                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }

                        properties {
                          authorizeProjectProperty {
                            strategy {
                              triggeringUsersAuthorizationStrategy()
                            }
                          }
                        }

                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/seed/Jenkinsfile')
                          }
                        }
                      }
                unclassified:
                  buildUserVars:
                    allBuilds: true
                  gerrit-trigger:
                    servers:
                      - name: "Gerrit"
                        noConnectionOnStartup: false
                        config:
                          buildCurrentPatchesOnly:
                            abortAbandonedPatchsets: false
                            abortManualPatchsets: false
                            abortNewPatchsets: false
                            abortSameTopic: false
                            enabled: false
                          categories:
                            - verdictDescription: "Code Review"
                              verdictValue: "Code-Review"
                            - verdictDescription: "Verified"
                              verdictValue: "Verified"
                          gerritAuthKeyFile: "/run/secrets/additional/jenkins-gerrit-ssh-private-key-privateKey"
                          gerritFrontEndUrl: "https://{{ .Values.config.domain }}/gerrit/"
                          gerritHostName: "gerrit-service.gerrit.svc.cluster.local"
                          gerritUserName: "gerrit-admin"
                          useRestApi: false
                  timestamper:
                    allPipelines: true
                    systemTimeFormat: "'<b>'yyyy-MM-dd HH:mm:ss.SSS'</b> '"
                    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
  destination:
    server: https://kubernetes.default.svc
    namespace: jenkins
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated: {}
