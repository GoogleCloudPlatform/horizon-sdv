// Copyright (c) 2024-2025 Accenture, All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//         http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Description:
// Create a development instance that developers can connect to for a finite
// time, allowing them to develop builds and investigate issues.

pipeline {

  // Parameters defined in groovy/job.groovy

  agent none

  stages {
    stage ('Start VM Instance') {
      agent { label params.JENKINS_GCE_CLOUD_LABEL }
      stages {
        stage ('MTK Connect to Host Device') {
          steps {
            script {
              currentBuild.description = "$BUILD_USER"
            }
            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              withCredentials([usernamePassword(credentialsId: 'jenkins-mtk-connect-apikey', passwordVariable: 'MTK_CONNECT_PASSWORD', usernameVariable: 'MTK_CONNECT_USERNAME')]) {
                sh '''
                  cd ./workloads/common/mtk-connect/ || true
                  sudo \
                  MTK_CONNECT_DOMAIN=${HORIZON_DOMAIN} \
                  MTK_CONNECT_USERNAME=${MTK_CONNECT_USERNAME} \
                  MTK_CONNECT_PASSWORD=${MTK_CONNECT_PASSWORD} \
                  MTK_CONNECTED_DEVICES="1" \
                  MTK_CONNECT_TESTBENCH="${JOB_NAME}-${BUILD_NUMBER}" \
                  MTK_CONNECT_TESTBENCH_USER="${BUILD_USER_ID}" \
                  MTK_CONNECT_HOST_ONLY="true" \
                  timeout 15m ./mtk_connect.sh --start
                   cd - || true
                '''
              }
            }
          }
        }

        stage ('Retain instance') {
          steps {
            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              script {
                sleep(time: "${INSTANCE_MAX_UPTIME}", unit: 'HOURS')
              }
            }
          }
        }

        stage ('Stop Virtual Devices') {
          steps {
            catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
              withCredentials([usernamePassword(credentialsId: 'jenkins-mtk-connect-apikey', passwordVariable: 'MTK_CONNECT_PASSWORD', usernameVariable: 'MTK_CONNECT_USERNAME')]) {
                script {
                  sh 'echo "Stopping  MTK Connect"'
                  sh '''
                    cd ./workloads/common/mtk-connect/ || true
                    sudo \
                    MTK_CONNECT_DOMAIN=${HORIZON_DOMAIN} \
                    MTK_CONNECT_USERNAME=${MTK_CONNECT_USERNAME} \
                    MTK_CONNECT_PASSWORD=${MTK_CONNECT_PASSWORD} \
                    MTK_CONNECTED_DEVICES="1" \
                    MTK_CONNECT_TESTBENCH="${JOB_NAME}-${BUILD_NUMBER}" \
                    timeout 10m ./mtk_connect.sh --stop || true
                    cd - || true
                  '''
                }
              }
            }
          }
        }
      }
    }
  }
}
